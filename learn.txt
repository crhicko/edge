Running the docker service:
Enable then reboot to start, systemctl enable will auto start the service
sudo systemctl enable docker.service

Docker socket permission denied:
sudo chmod 666 /var/run/docker.sock


Nats.io Lingo
Pub Sub: Publisher senes messaged on a subject and any subscriber to that subject receieves it, fan-out, one to many
	Messages: Subject (Topic)
		Byte array payload
		Headers
		Optional 'reply' address field
Subject Hierarchy:
Looks like the '.' in a subject string will allow for creating hierarchies of subjects
	time.us
	time.us.east
	time.us.east.atlanta
	- This allows for disitribution of events on larger or more granular topics, good way to categorize
	- This is very flexible due to matching wildcards (time.*.east)
Subject Wildcards
* - normal wildcard, fits in a slot on the subject hierarchy
	time.*.east will listen to all messages with any value for the * and east appended with no further values (city granularity)
> - multi-match wildcard, can only be at end, will match all including those that have a further chain/are more granular
	time.us.> will match to time.us.east and time.us.east.atlanta
** it is recommend to keep the number of 'tokens' (slots) to a max of 16!, not sure if this is a hard cap, seems just like a recommendaton for your own sanity


Natscli - installed off of AUR
nats sub <subject> - subscribe to subject
nats pub <subject> <msg> - publish a message to a subject

Project:
On compose up the nats server and 2 containers running sports and executions begin running, sports and executions exit early due to no servers available for connection
	- can't connect to the spun up docker image, will need to investigate these spun up images since i dont have the source
	- cant exec commands on the nats image since it is a barebones build, no ls or anything like that, will need to check the python code
	- looks like the nats client library in python handles the connection in executions.py
	- await nats_client.connect("host.docker.internal:4222", loop=event_loop)
	- after investigation it looks like linux doesnt auto set host.docker.internal, manually setting may fix this since I don't want to edit any source
	- setting this in external_hosts fixes the issue
	- SUBJECTS: sports are on sports_event, exevs are on execution
	- subscriber options: Java (nats library), python (nats library)
	- persistance: mongodb

Postgres:
	- using postgres for persistance due to familiarity, the data is structured so i think its fair to use a relational db instead of nosql
	- adding a postgres docker image
	- pg docker has a directory that will run scripts on start of the container at: /docker-entrypoint-initdb.d/
	- make sure you down completely remove the image instead of stopping if you want to adjust this init script
